//Void function, return is optional
void Fn1 (gomla s, 3ayem secondarg, rakam arr[]){
    s = "";
    arr[i]=3;
    ar[7], arr[3]=7;
    fn(3, 5);

    fn(3, arr[i]);
    //rakam x++;
    x++;
    x+=6;
    rakam a[5];
    rakam x= arr[3];
    x=arr[3];
    rakam arr[5]={4,d,5};
    /*arr[4]=6;*/
    //uncomment return to test
    //return;
    rakam x,y= hello(3, y);
    law (k){
        //test
        return;
    } laken {
        k--;
        return;
    }

    law (k){
        //test
    } laken {
        k--;
        return;
    }

    law (k){
        //test
        return;
    } laken law (i){
        k--;
        return;
    }
    law (k){
        //test
       
    } laken law (i){
        k--;
        return;
    }
}
//Function to return 3ayem, should have a return 
3ayem Calc (3ayem s, 3ayem secondarg){

    r = s+l;
    law (!l){
        //test
        //return; //will cause error
        return d;
        
    } 

    law (o){
        h++;
        return 5;
        
    } laken {
        //ll
        return 11;  
    }

    law (o){
        h++;
        
    } laken law (l){
        //ll
        return 11;  
    }
    
    return d;
}

void fn3(){
    //hiii
    law (g==l){
        h=j;
        return;
    }
    return;
}

void main(){
    //beg of code
    law (k==0){
        l = p;
        
        //return 6; will cause error
        return;
    }

    talama(l){
        k++;
        law (o){
            j++;
          
            return;
        }
    }

    //Switch case
    badel(a){
        7alet 5:
                break;
        el3ady:
                break;
        7alet 6:
                break;
        7alet 33:
                y=h;
                l++;
                m= m* n;
                badel (y){
                    7alet 'd':
                            h= "kk";
                            break;
                    el3ady:
                            break;
                }
                break;
    }

    //do while
    e3mel {
        i++;
        l= l+3;
        l=kk;
    } talama (a);

    rakam x = a > 3;
    x=a&&b;
    3ayem x;
    z= !c;
    h=a||b;
    rakam h = (3);

    //for loops
    lef(f=3; f<5; f=f+1){
        l=l;
    }

    lef(f=3; f<5; f++){
        l=l;
    }

    //if else stmt
    law (a){
        l=h+k;
        law (a&&h) {
        h= k;}

        l=h+k;
    }
    laken { law (a&&h) {
        h= k;}
    }

    //if else if stmt
    law (a){
        p++;
    } laken law (!a){
        p--;
    }

    //while
    talama(d){
        j = 33;
    }

    //if and while in while
    talama (f){
        law (k==3){
            j = 4+5;
        }
        laken law (k==9){
            j=5+6;
        }

        talama (f){
            p= l + 5 ;
        }
    }
}
//end